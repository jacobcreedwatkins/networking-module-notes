BERKELEY PACKET FILTERS
------------------------
https://git.cybbh.space/net/public/-/blob/master/modules/networking/activities/1-Fundamentals/BPF_Syntax_Examples/bpf-syntax.adoc	:	epic


        0x0800 ethertype = IPv4
        0x0806 ethertype = ARP
        0x86DD ethertype = IPv6
        
        Using BPFs with operators, bitmasking, and TCPDump creates a powerful tool for traffic filtering and parsing.

tcpdump {A} [B:C] {D} {E} {F} {G}

A = Protocol (ether | arp | ip | ip6 | icmp | tcp | udp)
B = Header Byte offset
C = optional: Byte Length. Can be 1, 2 or 4 (default 1)
D = optional: Bitwise mask (&)
E = Operator (= | == | > | < | <= | >= | != | () | << | >>)
F = Result of Expresion
G = optional: Logical Operator (&& ||) to bridge expressions
Example:
tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 && tcp[2:2] != 23)'


BITWISE MASKIng
----------------

	To filter down to the bit(s) and not just the byte
	
	ip[0] & 0x0F > 0x05













LAYER 4 (TRANSPORT LAYER)
 ---------------------------
 
 
 
	- TCP/UDP
	- 'Connectionless' = UDP
	
	TCP FLAGS
	----------
	
	32	URG
	16	ACK
	8	PSH
	4	RST
	2	SYN
	1	FIN
	
	3-WAY HANDSHAKE
	-----------------
	SYN, SYN/ACK, ACK
	

LAYER 5 (SESSION LAYER)
-----------------------

	SOCKS (TCP PORT 1080)
	
	PPTP (TCP PORT 1723
	
	L2TP (TCP 1701)
	
	RPC (ANY PORT)

	
LAYER 6 (PRESENTATION LAYER)
----------------------------

	
LAYER 7 (APPLICATION LAYER)
----------------------------
	

	FTP ACTIVE
	-----------
	
		SERVER			CLIENT
		~~~~~~			~~~~~~
		20 (DATA)	->	1030
		21		->	1029
	
	
	FTP PASSIVE
	
		SERVER			CLIENT
		~~~~~~~		~~~~~~
		21 (CMD)	->	1029
		2020		->	1030
		
		***	edit this section with more clarification later	***
		
		
SSH ARCHITECTURE 2
-------------------
	
	User Ke	-	asymmetric punlic key used to identify the user to the server
	Host key	-	asymmetric public key used to identify the server to the user
	session key	-	symmetric key used by the client


TELNET
-------


	TCP PORT 23
	
	
SMTP
------

	TCP PORT 25 (Simple Mail Transfer protocol)
	

TACACS
-------

	TCP PORT 49
	
HTTP(S)
--------


	TCP PORTS 80/443 respectively
	
	Get /HEAD / POSt / PUT

	Status codes 100, 200, 300, 400
	
POP
----

	Post Office Protocol
	
IMAP
-----




LAYER 2 SWTICHING TECHNOLOGIES
------------------------------

	CAM tables = mac address tables
    		- can be flooded (fixed size in table)
	

	VLANS will need a routing table to communicate. They are used to logically seperate Local Area Networks (LAN's)
		- VLAN Tag is at offset 14 and is 4 bytes
		
	
		- 802.1AD "Q-in-Q" = a double tag
		- 0x88A8 ethertype = standard double tag
		- 0x9100 = non-standard double tag
		
		
	Spanning Tree Protocol (STP)
	----------------------------
	- used to eliminate infinite routing loops/broadcast spams
		1. elects root bridge
		2. identifies the root ports on non-root bridge
		3. identifies the designated port for each segment
		4. sets alternate ports to blcoking state
	
	
	LAYER 2 DISCOVERY PROTOCOLS
	----------------------------
	
		promiscuous protocols that can be used to obtain information about devices
		
		- Cisco discovery protocol (CDP)
		
		- Foundry discovery protocol (FDP)
		
		- Link layer discovery protocol (LLDP)
			^ vendor neutral discovery protocol endorsed by IEEE
			
		- Dynamic Trunking Protocol (DTP)
		
		- VLAN Trunking Protocol (VTP)
	
	
	PORT SECURITY
	--------------
	
		3 modes: shutdown, restrict, protect
		
	
	LAYER 3 ROUTING TECHNOLOGIES
	-----------------------------
		
		
		
		Routing Tables
		------------------
		S - Static route (manually added)
	
	

    	
    
BGP HIJACKING
--------------
	
	- Illegitimiate advedrtising of addresses
	- BGP propogates false information
	- malicious for obvious reasons

    
    
    
    
    
    
    
    
