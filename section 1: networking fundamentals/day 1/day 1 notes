MATHEMATICS OF NETWORKING
---------------------------
 
	bits		Common Representation
	---		---------------------
	1		Bit/Flag
	4		Nibble
	8		Byte/Octet
	16		Half Word
	32		Word
	64		Double Word


BASE FORMATS
-------------

	Base 2 : Binary
	Base 10: Normal
	Base 16: Hex
	Base64 : encoding


ENCAPSULATION
--------------

	Headers are encapsulated as they move DOWN the OSI model (4 -> 1)

	example image	:	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/PDU_SDU.png
	
	
OSI MODEL
---------
	
	layer			name				PDU					common protocols
	-----			-----				---					----------------
	7			application			Data					ssh,HTTPS,dns
	6			presentation			Data					unicode,most file extensions
	5			session				Data					RPC, SOCKS
	4			transport			Datagram(UDP) / Segment(TCP)		TCP / UDP
	3			network				packet					IPv4,IPv6,ICMP,RIP/BGP/EIGRP
	2			data link			frame					ARP
	1			physical			bits					802.11 standards, cabling, hubs/repeaters
	


	https://www.iana.org/				:	internet assigned numbers authority
	https://en.wikipedia.org/wiki/List_of_RFCs	:	IEEE RFC standards
	
	
LAYER 1 (PHYSICAL)
--------
	
	- Hardware Specifications
	- Encoding and Signaling
	- Data Transmission and Reception
	- Physical Network Design
	
	
LAYER 2 (DATA LINK)
--------------------
	
	SUBLAYERS
	---------
	- MAC (Media Access Control)
	- LLC (Logical Link Control)
	
	
	ETHERNET HEADER
	---------------
	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/Ethernet_II_Frame.png	:	image of header
	
	5 total fields
	
	Preamble -> SFD -> Ethernet Frame (the diagram below is the ethernet frame)
	
		Preamble is 7 bytes of alternating 0's and 1's followed by 1 byte SFD delimiter 
	
	Destination Mac  ->  Source MAC  ->  Ethertype  ->  Payload/Data/SDU  ->  CRC/FCS
	      |			|	      |			    |		      |
	    6 Bytes	      6 Bytes       2 Bytes		46-1500 Bytes        4 Bytes
	
		Preamble of header and Start Frame Delimiter (which marks end of preamble) are stripped off in wireshark unless shown in promiscuous mode.
		


	
	ARP HEADER
	-----------
	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/ARP_Header.png	:	example image
	
	ARP resolves IP addresses to MAC addresses
	
	Hardware Type  ->  Protocol Type  ->  Hardware Address Length  ->  Protocol Address Length  ->  Operation  ->  Sender Hardware Address  ->  Sender Protocol Address  ->  Target Hardware Address  ->  Target Protocol Address
	     |			|			|			       |		    |			|			    |				|				|	
	  2 Bytes          2 Bytes  		      1 Byte			    1 Byte		 2 Bytes	     6 Bytes			 4 Bytes                     6 Bytes       		      4 Bytes
	
	
	
LAYER 3 (NETWORK LAYER)
-------------------------

	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/IPv4_Header.png	:	IP header layout
	
	Version  ->  IHL  ->  DSCP  ->  ECN  ->  Total length  ->  identification  ->  Flags  ->  Fragment Offset  ->  TTL  ->  Protocol  ->  Header Checksum  ->  Source IP  ->  Target IP
	
	
	FRAGMENTATION PROCESS
	----------------------
	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/Fragmentation.png	:	image explaining
	
		MF = More Fragments (indicates fragmented packets)
		MTU = Maximum Transmission Unit (how much data is allowed in a single packet)


	IPv6 HEADER
	------------
	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/IPv6_Header.png	:	example header
	
	
	https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/IPv4_vs_IPv6_Header.png		:	ipv6 vs ipv4 header
	
	
	FINGERPRINTING
	---------------
	
	Vendors have default TTL's built into them.
		NOTE: these can be spoofed, must be VERIFIED
	
		OS		TTL
		~~		~~~
		Linux		64
		Windows		128
		Cisco		255
	
	
	ICMP HEADER
	-----------
	
	
	
	
